import telebot
from telebot import types

import time
import random

import sqlite3

bot = telebot.TeleBot('5810337686:AAHWBSQ0KTJkkyjvpUCvTlyArVc4_qMfMS8')


# üëâ üôè üëÜ üëá üòÖ üëã üôå ‚ò∫Ô∏è ‚ùó Ô∏è‚ÄºÔ∏è ‚úåÔ∏è üëå ‚úä üë®‚Äçüíª  ü§ñ üòâ  ‚òùÔ∏è ‚ù§Ô∏è üí™ ‚úçÔ∏è üéØ  ‚õî  Ô∏è‚úÖ üìäüìàüßÆ   üó≥Ô∏è


@bot.callback_query_handler(func=lambda call: True)
def step(call):

    if call.data == 'key1':
        pass

    elif call.data == 'key2':
        pass


@bot.message_handler(commands=['getmyid'])
def getmyid(message):
    ID = message.chat.id
    bot.send_message(message.chat.id, f'–í–∞—à user ID: {ID}', parse_mode='Markdown')




@bot.message_handler(commands=['start'])
def start(message):
    ID = message.chat.id
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    message_text = f'–ü—Ä–∏–≤–µ—Ç {first_name}!\n–í–∞—à user ID: {ID}\n–í–µ—Ä–Ω–æ –ª–∏ —è —É–∑–Ω–∞–ª –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é {last_name}?'

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn0 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É')
    btn1 = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á')
    markup.add(btn0, btn1)

    bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)



@bot.message_handler(content_types=['text'])
def mess(message):
    get_message_bot = message.text.strip().lower()


    if get_message_bot == '–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É':

        con = sqlite3.connect('sqlite.db')
        cur = con.cursor()

        cur.execute('''
                           CREATE TABLE IF NOT EXISTS todo(
                               id INTEGER,  -- ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
                               name TEXT,  -- –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               subject TEXT, -- –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å
                               tasks TEXT,   -- –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—à—É –∑–∞–¥–∞—á—É
                               data TEXT  -- —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã 18.12.2022
                           );
                           ''')
        con.commit()


        bot.send_message(message.chat.id, f'–ü—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –∑–∞–¥–∞—á—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \n'
                                          f'[–ø—Ä–µ–¥–º–µ—Ç; —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏; –∫–æ–Ω–µ—Ü —Å—Ä–æ–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è]')

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            M = message.text.split(';')
            sub = M[0].strip()
            task = M[1].strip()
            data = M[2].strip()

            con = sqlite3.connect('sqlite.db')
            cur = con.cursor()

            cur.execute(f'SELECT * FROM todo WHERE id = {message.chat.id}')
            records = cur.fetchone()


            cur.execute('INSERT INTO todo VALUES(?, ?, ?, ?, ?);', (message.chat.id, message.from_user.first_name, sub, task, data))
            con.commit()


            con.close()



            bot.send_message(message.chat.id, f'ü§ñ –û—Ç–ª–∏—á–Ω–æ, –∑–∞–ø–∏—Å–∞–ª –≤–∞—à—É –∑–∞–¥–∞—á—É', parse_mode='Markdown')

        bot.register_next_step_handler(message, message_input)


    elif get_message_bot == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á':

        con = sqlite3.connect('sqlite.db')
        cur = con.cursor()

        cur.execute('''
                           CREATE TABLE IF NOT EXISTS todo(
                               id INTEGER,  -- ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
                               name TEXT,  -- –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               subject TEXT, -- –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å
                               tasks TEXT,   -- –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—à—É –∑–∞–¥–∞—á—É
                               data TEXT  -- —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã 18.12.2022
                           );
                           ''')

        cur.execute(f'SELECT subject, tasks, data FROM todo WHERE  id = {message.chat.id}')
        message_text = ''
        records = cur.fetchall()
        for row in records:
            message_text += f'------------------\n' \
                            f'*–¢–∏–ø:* {row[0]}\n' \
                            f'*–ó–∞–¥–∞—á–∞:* {row[1]}\n' \
                            f'*–°—Ä–æ–∫ –¥–æ:* {row[2]}\n'
        bot.send_message(message.chat.id, message_text, parse_mode='Markdown')
        con.commit()

    else:
        bot.send_message(message.chat.id, f'–£ –º–µ–Ω—è –Ω–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã..–Ω–æ —è –µ—â–µ —É—á—É—Å—å!', parse_mode='Markdown')


if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            time.sleep(3)
            print(e)
